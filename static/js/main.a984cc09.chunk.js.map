{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","input","setInput","inputRef","useRef","useEffect","current","focus","className","onSubmit","e","preventDefault","id","Math","floor","random","text","type","placeholder","value","name","onChange","target","ref","Todo","todos","completeTodo","removeTodo","updateTodo","edit","setEdit","map","todo","index","onClick","TodoList","setTodos","test","newTodos","console","log","updatedTodos","isComplete","removeArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMA+CeA,MA7Cf,SAAkBC,GAAQ,IAAD,EACCC,mBAAS,IADV,mBACfC,EADe,KACTC,EADS,KAGhBC,EAAWC,iBAAO,MAwBvB,OAtBDC,qBAAU,WACNF,EAASG,QAAQC,WAsBhB,uBAAMC,UAAU,YAAYC,SAbZ,SAAAC,GACjBA,EAAEC,iBAEDZ,EAAMU,SAAU,CAERG,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBC,KAAMf,IAGdC,EAAS,KAIT,UAEI,uBACAe,KAAK,OACLC,YAAY,aACZC,MAAOlB,EACPmB,KAAK,OACJZ,UAAU,aACVa,SA3BY,SAAAX,GAEjBR,EAASQ,EAAEY,OAAOH,QA0BbI,IAAKpB,IAGL,wBAAQK,UAAU,cAAlB,0B,eCKEgB,MA3Cf,YAA6D,IAA9CC,EAA6C,EAA7CA,MAAMC,EAAuC,EAAvCA,aAAcC,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,WAAa,EAElC5B,mBAAS,CAC3BY,GAAI,KACJO,MAAO,KAJ6C,mBAEjDU,EAFiD,KAE3CC,EAF2C,KAcpD,OAAGD,EAAKjB,GACG,cAAC,EAAD,CAAUiB,KAAMA,EAAMpB,SARhB,SAAAU,GACjBS,EAAWC,EAAKjB,GAAIO,GACpBW,EAAQ,CACJlB,GAAI,KACJO,MAAO,QASRM,EAAMM,KAAI,SAACC,EAAMC,GAAP,OAIb,cAHA,CAGA,OAAKzB,UAAU,aAAf,UACI,qBAAmB0B,QAAS,kBAAMR,EAAaM,EAAKpB,KAApD,SACSoB,EAAKhB,MADJgB,EAAKpB,IAGf,sBAAKJ,UAAU,QAAf,UACQ,cAAC,IAAD,CACA0B,QAAS,kBAAMP,EAAWK,EAAKpB,KAC/BJ,UAAU,gBAEV,cAAC,IAAD,CACC0B,QAAS,kBAAMJ,EAAQ,CAAClB,GAAIoB,EAAKpB,GAAIO,MAAMa,EAAKhB,QAChDR,UAAU,mBAXUyB,OCwC1BE,MAjEf,WAAqB,IAAD,EAEMnC,mBAAS,IAFf,mBAEXyB,EAFW,KAELW,EAFK,KAmDhB,OACI,sBAAK5B,UAAU,WAAf,UACI,4DACA,cAAC,EAAD,CAAUC,SAlDJ,SAAAuB,GAAQ,IAAD,EACnB,GAAIA,EAAKhB,OAAQ,QAAQqB,KAAKL,EAAKhB,MAAnC,CAKA,IAAMsB,EAAQ,CAAIN,GAAJ,mBAAaP,IAE3BW,EAASE,IACT,EAAAC,SAAQC,IAAR,oBAAef,QA0CT,cAAC,EAAD,CACAA,MAAOA,EACPC,aAlBW,SAAAd,GACjB,IAAI6B,EAAehB,EAAMM,KAAI,SAAAC,GAIzB,OAHGA,EAAKpB,KAAOA,IACXoB,EAAKU,YAAcV,EAAKU,YAErBV,KAEXI,EAASK,IAYHd,WA7BO,SAAAf,GACf,IAAM+B,EAAW,YAAIlB,GAAOmB,QAAO,SAAAZ,GAAI,OAAIA,EAAKpB,KAAOA,KAEvDwB,EAASO,IA2BDf,WA1CO,SAACiB,EAAQC,GAEpBA,EAAS9B,OAAQ,QAAQqB,KAAKS,EAAS9B,OAK3CoB,GAAS,SAAAW,GAAI,OAAIA,EAAKhB,KAAI,SAAAiB,GAAI,OAAKA,EAAKpC,KAAOiC,EAASC,EAAUE,eCdvDC,MARf,WACE,OACE,qBAAKzC,UAAU,WAAf,SACA,cAAC,EAAD,OCFJ0C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a984cc09.chunk.js","sourcesContent":["import React,{useState , useEffect, useRef} from 'react'\n\nfunction TodoForm(props) {\n   const [input,setInput]=useState('');\n\n   const inputRef = useRef(null);\n\n   useEffect(() => {\n       inputRef.current.focus()\n   })\n\n    const handleChange = e => {\n  \n        setInput(e.target.value);\n    };\n\n\n   const handleSubmit = e => {\n       e.preventDefault();\n\n        props.onSubmit ({\n          \n                id: Math.floor(Math.random() * 10000),\n                text: input\n        });\n        \n        setInput('');\n   };\n   \n    return (\n        <form className=\"todo-form\" onSubmit={handleSubmit}>\n\n            <input \n            type=\"text\" \n            placeholder=\"Add a todo\" \n            value={input} \n            name=\"text\"\n             className=\"todo-input\"\n             onChange={handleChange}\n             ref={inputRef}\n             />\n            \n             <button className=\"todo-button\">add todo</button>\n        </form>\n    )\n}\n\nexport default TodoForm;\n","import React,{useState}from 'react';\nimport TodoForm from './TodoForm';\nimport {RiCloseCircleLine} from 'react-icons/ri';\nimport {TiEdit} from 'react-icons/ti';\nfunction Todo({todos,completeTodo, removeTodo, updateTodo}) {\n\n    const [edit, setEdit]=useState({\n        id: null,\n        value: ''\n    });\n    \n    const submitUpdate = value => {\n        updateTodo(edit.id, value);\n        setEdit({\n            id: null,\n            value: ''\n        });\n    }\n        if(edit.id){\n            return <TodoForm edit={edit} onSubmit={submitUpdate}/>;\n        }\n    \n\n\n    return todos.map((todo, index) => (\n        /*<div className={todo.isComplete ? 'todo-row complete': 'todo-row' } \n            key={index}\n        >*/\n        <div className=\"todo-items\" key={index}> \n            <div key={todo.id} onClick={() => completeTodo(todo.id)}>\n                    {todo.text}\n            </div>\n            <div className=\"icons\">\n                    <RiCloseCircleLine\n                    onClick={() => removeTodo(todo.id)}\n                    className='delete-icon'\n                    />\n                    <TiEdit\n                     onClick={() => setEdit({id: todo.id, value:todo.text})}\n                     className='edit-icon'\n                     />\n            </div>\n\n         </div>\n    ));\n}\n\nexport default Todo;\n\n","import React,{useState} from 'react';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\nfunction TodoList() {\n  \n  const [todos,setTodos]= useState([]);\n  \n  const addTodo = todo =>{\n      if(!todo.text || /^\\s*$/.test(todo.text))\n      {\n          return;\n      }\n\n      const newTodos = [todo, ...todos];\n\n      setTodos(newTodos);\n      console.log(...todos);\n  };\n\n\nconst updateTodo = (todoId, newValue) =>{\n\n    if(!newValue.text || /^\\s*$/.test(newValue.text))\n    {\n        return;\n    }\n\n    setTodos(prev => prev.map(item => (item.id === todoId ? newValue :item)))\n}\n\n\n\nconst removeTodo = id => {\n    const removeArr =[...todos].filter(todo => todo.id !== id)\n\n    setTodos(removeArr);\n}\n\n\n\n\n\n  const completeTodo = id =>{\n      let updatedTodos = todos.map(todo => {\n          if(todo.id === id){\n              todo.isComplete = !todo.isComplete;\n          }\n          return todo;\n      });\n      setTodos(updatedTodos);\n  };\n\n\n\n    return (\n        <div className=\"todolist\">\n            <h1>What's the Plan for Today?</h1>\n            <TodoForm onSubmit={addTodo}/>\n            <Todo \n            todos={todos}\n            completeTodo={completeTodo}\n            removeTodo={removeTodo}\n            updateTodo={updateTodo}\n            />\n        </div>\n    )\n}\n\nexport default TodoList\n","import React from 'react';\nimport './App.css';\n\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n    <TodoList/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}